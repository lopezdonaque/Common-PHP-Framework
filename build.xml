<?xml version="1.0" encoding="UTF-8"?>
<project default="default">

  <property file="build.properties" />
  <property file="${buildlibs}/common-targets/androme-common.properties" />
  <property file="${buildlibs}/common-targets/androme-packages-dependencies.properties" />


  <!-- **************************************************** -->
  <!-- Define classpath -->
  <!-- **************************************************** -->
  <import file="${buildlibs}/common-targets/define_classpath.xml" />



  <!-- **************************************************** -->
  <!-- Clean -->
  <!-- **************************************************** -->
  <target name="clean">
    <delete dir="docs" />
    <delete dir="Common/docs" />
    <delete dir="build" />
    <delete>
      <fileset dir=".">
        <include name="*.deb" />
      </fileset>
    </delete>
  </target>



  <!-- **************************************************** -->
  <!-- Composer (required to run unit tests) -->
  <!-- **************************************************** -->
  <target name="composer">
    <exec executable="wget" failonerror="true">
      <arg value="-nc" />
      <arg value="http://getcomposer.org/composer.phar" />
    </exec>
    <exec executable="php" failonerror="true">
      <arg value="composer.phar" />
      <arg value="install" />
      <arg value="--dev" />
    </exec>
  </target>

  <target name="clean_composer">
    <delete dir="vendor" />
    <delete file="composer.phar" />
    <delete file="composer.lock" />
  </target>



  <!-- **************************************************** -->
  <!-- PHP Lint -->
  <!-- **************************************************** -->
  <import file="${buildlibs}/common-targets/php_lint.xml" />



  <!-- **************************************************** -->
  <!-- PHPDoc -->
  <!-- **************************************************** -->
  <target name="phpdoc">
    <exec executable="php">
      <arg value="${buildlibs}/apigen/apigen.php" />
      <arg value="-s" />
      <arg value="src" />
      <arg value="-d" />
      <arg value="Common/docs" />
      <arg value="--title" />
      <arg value="${package.description} documentation" />
      <arg value="--autocomplete" />
      <arg value="classes,constants,functions,methods" />
      <arg value="--report" />
      <arg value="build/checkstyle.xml" />
      <arg value="--quiet" />
      <arg value="yes" />
    </exec>
  </target>



  <!-- **************************************************** -->
  <!-- Unit Tests -->
  <!-- **************************************************** -->
  <target name="unit_test">
    <mkdir dir="build" />
    <exec executable="vendor/bin/phpunit" failonerror="true">
      <arg line="--bootstrap tests/bootstrap.php" />
      <arg line="--log-junit build/phpunit.xml" />
      <arg value="--colors" /> <!-- Use colors in output. -->
      <arg value="--debug" /> <!-- Display debbuging information during test execution. -->
      <arg line="tests/" />
    </exec>
  </target>



  <!-- **************************************************** -->
  <!-- Sets property "svn.info.lastRev" to head svn revision -->
  <!-- **************************************************** -->
  <import file="${buildlibs}/common-targets/svn_update.xml" />
  <import file="${buildlibs}/common-targets/find_revision.xml" />



  <!-- **************************************************** -->
  <!-- Generate Debian package -->
  <!-- **************************************************** -->
  <target name="package" depends="find_revision">

    <!-- Deployment package -->
    <deb package="${package.fullname_versioned}" todir="." section="libs" depends="${dependencies.androme-commom-php-framework}">
      <version upstream="${version}" />
      <maintainer name="${maintainer.name}" email="${maintainer.email}" />
      <description synopsis="${package.description}">${package.description}</description>
      <tarfileset dir="src" prefix="${package.install.dir}/${package.majorversion}">
        <include name="**/**" />
      </tarfileset>
    </deb>

    <!-- Devel package without dependencies -->
    <deb package="${package.fullname_versioned_dev}" todir="." section="libs">
      <version upstream="${version}" />
      <maintainer name="${maintainer.name}" email="${maintainer.email}" />
      <description synopsis="${package.description}">${package.description}</description>
      <tarfileset dir="src" prefix="${package.install.dir}/${package.majorversion}">
        <include name="**/**" />
      </tarfileset>
    </deb>
  </target>



  <!-- **************************************************** -->
  <!-- Install Debian package -->
  <!-- **************************************************** -->
  <import file="${buildlibs}/common-targets/install_deb_versioned.xml" />
  <import file="${buildlibs}/common-targets/install_deb_versioned_dev.xml" />



  <!-- **************************************************** -->
  <!-- Update Debian repository (Adds the current package to the Debian repository) -->
  <!-- **************************************************** -->
  <import file="${buildlibs}/common-targets/hostname.xml" />
  <import file="${buildlibs}/common-targets/update_debian_repository_versioned.xml" />
  <import file="${buildlibs}/common-targets/update_debian_repository_versioned_dev.xml" />
  <import file="${buildlibs}/common-targets/update_integra_repository_versioned.xml" />



  <!-- **************************************************** -->
  <!-- Build targets -->
  <!-- **************************************************** -->
  <target name="default" depends="clean, phplint, composer, unit_test, clean_composer, phpdoc, package, update_debian_repository_versioned, update_debian_repository_versioned_dev" />
  <target name="prerelease" depends="clean,package,update_integra_repository_versioned" />

</project>
